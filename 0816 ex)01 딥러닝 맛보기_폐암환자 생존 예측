{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1sO5nr2744TliWNVE15FItVXmCGY9FtC1","authorship_tag":"ABX9TyNLzi+hBA3t1qdEmnmecvF9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### 목표\n","\n","- 폐암 환자의 생존을 예측하는 분류 모델 생성\n","- 신경망을 활용하여 2진분류 문제 해결"],"metadata":{"id":"bdmk32Rm3941"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"metadata":{"id":"J1J0HZljGnE9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# /content/drive/MyDrive/Colab Notebooks/SW 딥러닝/DATA/student-mat.csv\n","# 리눅스 명령어를 이용한 데이터 불러오기\n","\n","%pwd # -> print working directory : 현재 작업 경로 출력"],"metadata":{"id":"sAWDTySqFx2Q","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1692231607401,"user_tz":-540,"elapsed":8,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"5c43e0d7-f208-4a9d-cc84-a28654b295be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["# cd -> change directory :  작업 경로 변경\n","%cd /content/drive/MyDrive/Colab Notebooks/SW 딥러닝"],"metadata":{"id":"4tAHhqDBFx5o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692231607401,"user_tz":-540,"elapsed":6,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"1444e1a6-bfe1-411f-aa14-2dfbec23a156"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/SW 딥러닝\n"]}]},{"cell_type":"code","source":["%pwd"],"metadata":{"id":"YGIqQ3mDFx73","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1692231607401,"user_tz":-540,"elapsed":4,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"e9d9eaca-f1b1-4166-b675-31e6293724d2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/drive/MyDrive/Colab Notebooks/SW 딥러닝'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data = pd.read_csv(\"DATA/ThoraricSurgery.csv\", header=None)\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"JTS7ynom3sfc","executionInfo":{"status":"ok","timestamp":1692231610141,"user_tz":-540,"elapsed":2744,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"1b5f41aa-5a33-4cee-f4b1-30092c5893ab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0   1     2     3   4   5   6   7   8   9   10  11  12  13  14  15  16  \\\n","0    293   1  3.80  2.80   0   0   0   0   0   0  12   0   0   0   1   0  62   \n","1      1   2  2.88  2.16   1   0   0   0   1   1  14   0   0   0   1   0  60   \n","2      8   2  3.19  2.50   1   0   0   0   1   0  11   0   0   1   1   0  66   \n","3     14   2  3.98  3.06   2   0   0   0   1   1  14   0   0   0   1   0  80   \n","4     17   2  2.21  1.88   0   0   1   0   0   0  12   0   0   0   1   0  56   \n","..   ...  ..   ...   ...  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..   \n","465   98   6  3.04  2.40   2   0   0   0   1   0  11   0   0   0   1   0  76   \n","466  369   6  3.88  2.72   1   0   0   0   1   0  12   0   0   0   1   0  77   \n","467  406   6  5.36  3.96   1   0   0   0   1   0  12   0   0   0   0   0  62   \n","468   25   8  4.32  3.20   0   0   0   0   0   0  11   0   0   0   0   0  58   \n","469  447   8  5.20  4.10   0   0   0   0   0   0  12   0   0   0   0   0  49   \n","\n","     17  \n","0     0  \n","1     0  \n","2     1  \n","3     1  \n","4     0  \n","..   ..  \n","465   0  \n","466   0  \n","467   0  \n","468   1  \n","469   0  \n","\n","[470 rows x 18 columns]"],"text/html":["\n","\n","  <div id=\"df-68e09321-a559-41f2-8029-6be6e051f3fd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","      <th>13</th>\n","      <th>14</th>\n","      <th>15</th>\n","      <th>16</th>\n","      <th>17</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>293</td>\n","      <td>1</td>\n","      <td>3.80</td>\n","      <td>2.80</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2.88</td>\n","      <td>2.16</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>60</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>3.19</td>\n","      <td>2.50</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>66</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>14</td>\n","      <td>2</td>\n","      <td>3.98</td>\n","      <td>3.06</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>80</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17</td>\n","      <td>2</td>\n","      <td>2.21</td>\n","      <td>1.88</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>56</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>465</th>\n","      <td>98</td>\n","      <td>6</td>\n","      <td>3.04</td>\n","      <td>2.40</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>76</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>466</th>\n","      <td>369</td>\n","      <td>6</td>\n","      <td>3.88</td>\n","      <td>2.72</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>77</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>467</th>\n","      <td>406</td>\n","      <td>6</td>\n","      <td>5.36</td>\n","      <td>3.96</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>468</th>\n","      <td>25</td>\n","      <td>8</td>\n","      <td>4.32</td>\n","      <td>3.20</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>58</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>469</th>\n","      <td>447</td>\n","      <td>8</td>\n","      <td>5.20</td>\n","      <td>4.10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>49</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>470 rows × 18 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68e09321-a559-41f2-8029-6be6e051f3fd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-bbd0449c-caad-482b-958f-cdf31f4d803d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bbd0449c-caad-482b-958f-cdf31f4d803d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-bbd0449c-caad-482b-958f-cdf31f4d803d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-68e09321-a559-41f2-8029-6be6e051f3fd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-68e09321-a559-41f2-8029-6be6e051f3fd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["X = data.iloc[:, :-1] # [행의 범위, 열의 범위]\n","y = data.iloc[:, -1]\n","\n","X.shape, y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yP_QqX7t3sh8","executionInfo":{"status":"ok","timestamp":1692231610141,"user_tz":-540,"elapsed":3,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"667e1012-2410-4cbd-f583-179f50655e6f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((470, 17), (470,))"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=999)"],"metadata":{"id":"AY3lVVss3skU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n","print(X_test.shape)\n","print(y_train.shape)\n","print(y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZbEPkybx3sm0","executionInfo":{"status":"ok","timestamp":1692231611337,"user_tz":-540,"elapsed":2,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"08c2d268-2d72-4e4e-9fd0-d2c476db7591"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(352, 17)\n","(118, 17)\n","(352,)\n","(118,)\n"]}]},{"cell_type":"markdown","source":["### *딥러닝 신경망 구성*\n","\n","  1. 신경망 구조 설계\n","  2. 신경망 학습 및 평가 방법 설정\n","  3. 학습 및 학습과정 시각화\n","  4. 모델 평가"],"metadata":{"id":"H2pxG_Z__gLn"}},{"cell_type":"code","source":["from tensorflow.keras import Sequential\n","\n","from tensorflow.keras.layers import Dense"],"metadata":{"id":"8gbqb7T23spT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = Sequential()\n","\n","# 입력층(input_dim) + 중간층 1개(Dense)\n","# activation : 활성화 함수(들어온 자극(데이터)에 대한 응답 여부를 결정하는 함수)\n","model.add(Dense(16, input_dim=17 , activation=\"sigmoid\"))\n","\n","model.add(Dense(8, activation=\"sigmoid\")) # 하나의 층\n","model.add(Dense(4, activation=\"sigmoid\")) # 두개의 층\n","\n","# 출력층\n","# 출력층은 문제의 종류에 따라서 고정됨 (2진 분류 문제는 출력층 뉴런 개수, 활성화함수는 sigmoid로 고정)\n","model.add(Dense(1, activation=\"sigmoid\"))\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PrSBPY8t3srs","executionInfo":{"status":"ok","timestamp":1692231622128,"user_tz":-540,"elapsed":771,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"055599d3-39fe-403b-c2fc-344cada5d078"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 16)                288       \n","                                                                 \n"," dense_1 (Dense)             (None, 8)                 136       \n","                                                                 \n"," dense_2 (Dense)             (None, 4)                 36        \n","                                                                 \n"," dense_3 (Dense)             (None, 1)                 5         \n","                                                                 \n","=================================================================\n","Total params: 465\n","Trainable params: 465\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# binary_crossentropy : 2진분류에 사용하는 손실함수\n","# 오차의 평균을 구하는 것은 mse와 같지만 0~1 사이 값(분류를 편하게 하기 위해)으로 변환 후 평균오차를 구함\n","\n","model.compile(loss=\"binary_crossentropy\",\n","              optimizer=\"SGD\", # 최적화 함수 : 확률적경사하강법(SGD) 활용\n","              metrics=[\"acc\"]) # metrics : 평가방법을 설정(분류문제 이므로 정확도 출력이 필요)"],"metadata":{"id":"VPOeAUc_AA_n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["h = model.fit(X_train, y_train,\n","              epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2PDnXStqABB-","executionInfo":{"status":"ok","timestamp":1692231628541,"user_tz":-540,"elapsed":6418,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"a221d8b4-2e36-49dc-da7f-4afa82fd3a86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","11/11 [==============================] - 2s 4ms/step - loss: 0.5918 - acc: 0.8636\n","Epoch 2/100\n","11/11 [==============================] - 0s 8ms/step - loss: 0.5716 - acc: 0.8636\n","Epoch 3/100\n","11/11 [==============================] - 0s 6ms/step - loss: 0.5537 - acc: 0.8636\n","Epoch 4/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5379 - acc: 0.8636\n","Epoch 5/100\n","11/11 [==============================] - 0s 7ms/step - loss: 0.5238 - acc: 0.8636\n","Epoch 6/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5113 - acc: 0.8636\n","Epoch 7/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.5002 - acc: 0.8636\n","Epoch 8/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4902 - acc: 0.8636\n","Epoch 9/100\n","11/11 [==============================] - 0s 6ms/step - loss: 0.4814 - acc: 0.8636\n","Epoch 10/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4735 - acc: 0.8636\n","Epoch 11/100\n","11/11 [==============================] - 0s 9ms/step - loss: 0.4664 - acc: 0.8636\n","Epoch 12/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4601 - acc: 0.8636\n","Epoch 13/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4544 - acc: 0.8636\n","Epoch 14/100\n","11/11 [==============================] - 0s 5ms/step - loss: 0.4492 - acc: 0.8636\n","Epoch 15/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4446 - acc: 0.8636\n","Epoch 16/100\n","11/11 [==============================] - 0s 6ms/step - loss: 0.4404 - acc: 0.8636\n","Epoch 17/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4367 - acc: 0.8636\n","Epoch 18/100\n","11/11 [==============================] - 0s 8ms/step - loss: 0.4333 - acc: 0.8636\n","Epoch 19/100\n","11/11 [==============================] - 0s 8ms/step - loss: 0.4303 - acc: 0.8636\n","Epoch 20/100\n","11/11 [==============================] - 0s 7ms/step - loss: 0.4275 - acc: 0.8636\n","Epoch 21/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4250 - acc: 0.8636\n","Epoch 22/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4227 - acc: 0.8636\n","Epoch 23/100\n","11/11 [==============================] - 0s 6ms/step - loss: 0.4207 - acc: 0.8636\n","Epoch 24/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4188 - acc: 0.8636\n","Epoch 25/100\n","11/11 [==============================] - 0s 6ms/step - loss: 0.4171 - acc: 0.8636\n","Epoch 26/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4155 - acc: 0.8636\n","Epoch 27/100\n","11/11 [==============================] - 0s 5ms/step - loss: 0.4141 - acc: 0.8636\n","Epoch 28/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4128 - acc: 0.8636\n","Epoch 29/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4117 - acc: 0.8636\n","Epoch 30/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4106 - acc: 0.8636\n","Epoch 31/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4096 - acc: 0.8636\n","Epoch 32/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4087 - acc: 0.8636\n","Epoch 33/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4079 - acc: 0.8636\n","Epoch 34/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4071 - acc: 0.8636\n","Epoch 35/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4064 - acc: 0.8636\n","Epoch 36/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4058 - acc: 0.8636\n","Epoch 37/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4052 - acc: 0.8636\n","Epoch 38/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.4046 - acc: 0.8636\n","Epoch 39/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4042 - acc: 0.8636\n","Epoch 40/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4037 - acc: 0.8636\n","Epoch 41/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4033 - acc: 0.8636\n","Epoch 42/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4029 - acc: 0.8636\n","Epoch 43/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4026 - acc: 0.8636\n","Epoch 44/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4023 - acc: 0.8636\n","Epoch 45/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4019 - acc: 0.8636\n","Epoch 46/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4017 - acc: 0.8636\n","Epoch 47/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4014 - acc: 0.8636\n","Epoch 48/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4012 - acc: 0.8636\n","Epoch 49/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4010 - acc: 0.8636\n","Epoch 50/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4008 - acc: 0.8636\n","Epoch 51/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4006 - acc: 0.8636\n","Epoch 52/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.4004 - acc: 0.8636\n","Epoch 53/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4003 - acc: 0.8636\n","Epoch 54/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4001 - acc: 0.8636\n","Epoch 55/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.4000 - acc: 0.8636\n","Epoch 56/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3999 - acc: 0.8636\n","Epoch 57/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3998 - acc: 0.8636\n","Epoch 58/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3997 - acc: 0.8636\n","Epoch 59/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3996 - acc: 0.8636\n","Epoch 60/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3994 - acc: 0.8636\n","Epoch 61/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3994 - acc: 0.8636\n","Epoch 62/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3993 - acc: 0.8636\n","Epoch 63/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3992 - acc: 0.8636\n","Epoch 64/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3992 - acc: 0.8636\n","Epoch 65/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3991 - acc: 0.8636\n","Epoch 66/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3991 - acc: 0.8636\n","Epoch 67/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3990 - acc: 0.8636\n","Epoch 68/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3989 - acc: 0.8636\n","Epoch 69/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3989 - acc: 0.8636\n","Epoch 70/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3989 - acc: 0.8636\n","Epoch 71/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3988 - acc: 0.8636\n","Epoch 72/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3988 - acc: 0.8636\n","Epoch 73/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3988 - acc: 0.8636\n","Epoch 74/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3987 - acc: 0.8636\n","Epoch 75/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3987 - acc: 0.8636\n","Epoch 76/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3986 - acc: 0.8636\n","Epoch 77/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3986 - acc: 0.8636\n","Epoch 78/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3987 - acc: 0.8636\n","Epoch 79/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.3986 - acc: 0.8636\n","Epoch 80/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3986 - acc: 0.8636\n","Epoch 81/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3986 - acc: 0.8636\n","Epoch 82/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3985 - acc: 0.8636\n","Epoch 83/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3985 - acc: 0.8636\n","Epoch 84/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3985 - acc: 0.8636\n","Epoch 85/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.3985 - acc: 0.8636\n","Epoch 86/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3985 - acc: 0.8636\n","Epoch 87/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3985 - acc: 0.8636\n","Epoch 88/100\n","11/11 [==============================] - 0s 4ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 89/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3985 - acc: 0.8636\n","Epoch 90/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 91/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 92/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 93/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 94/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 95/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 96/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 97/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 98/100\n","11/11 [==============================] - 0s 3ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 99/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.3984 - acc: 0.8636\n","Epoch 100/100\n","11/11 [==============================] - 0s 2ms/step - loss: 0.3984 - acc: 0.8636\n"]}]},{"cell_type":"markdown","source":["# 0817"],"metadata":{"id":"T5S9rdOV6QC9"}},{"cell_type":"markdown","source":["### 활성화함수(activation) - 자극에 대한 반응여부와 그 정도를 결정하는 함수\n","\n","  - 회귀 :  linear(선형함수) 신경망에서 도출된 수치값을 그대로 예측해 사용\n","  - 분류 : 인공신경망은 선형회귀 모델을 기반으로 하여 도출된 수치값으로는 분류 문제를 풀기 어려움\n","    - 이진분류 : sigmoid함수를 통해 최종적으로 0 or 1로 분류 할 수 있음"],"metadata":{"id":"m3gpJdOG5nqW"}},{"cell_type":"code","source":["plt.figure(figsize=(15,5))\n","\n","plt.plot(h.history['acc'], label='acc')\n","\n","plt.legend()\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"5S7ifSAyGUUA","executionInfo":{"status":"ok","timestamp":1692232592018,"user_tz":-540,"elapsed":610,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"ad773c88-41d9-4ff8-a288-ab75fd1297a7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["model.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CeLbV9rh4o7d","executionInfo":{"status":"ok","timestamp":1692232693977,"user_tz":-540,"elapsed":3087,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"9f424d9d-185b-4780-d1f0-8663a2d42da0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 2s 5ms/step - loss: 0.4891 - acc: 0.8136\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.48909056186676025, 0.8135592937469482]"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":[],"metadata":{"id":"WG5hwPRV4o98"},"execution_count":null,"outputs":[]}]}