{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1CqGnfngRAcTF4OgUL34BSk0J7G8hOlNs","authorship_tag":"ABX9TyOZ7yvl5KqqiPFSLjDO7Qbf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### 목표\n","- 학생들의 수학 성적을 예측하는 회귀 모델 생성\n","- keras를 이용한 신경만 구축 방법 실습"],"metadata":{"id":"X71Hc_qBJYDY"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"metadata":{"id":"J1J0HZljGnE9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# /content/drive/MyDrive/Colab Notebooks/SW 딥러닝/DATA/student-mat.csv\n","# 리눅스 명령어를 이용한 데이터 불러오기\n","\n","%pwd # -> print working directory : 현재 작업 경로 출력"],"metadata":{"id":"sAWDTySqFx2Q","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1692162663067,"user_tz":-540,"elapsed":13,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"7701415e-bc56-4c64-a15d-e9d5fb6a04ab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["# cd -> change directory :  작업 경로 변경\n","%cd /content/drive/MyDrive/Colab Notebooks/SW 딥러닝"],"metadata":{"id":"4tAHhqDBFx5o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692162663067,"user_tz":-540,"elapsed":12,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"5e41437a-9083-4c8a-ddce-ff6cb8cb86dd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Colab Notebooks/SW 딥러닝\n"]}]},{"cell_type":"code","source":["%pwd"],"metadata":{"id":"YGIqQ3mDFx73","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1692162663068,"user_tz":-540,"elapsed":12,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"1ef9ccd2-da46-45a0-f8ef-4d7d1f74d3e5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/drive/MyDrive/Colab Notebooks/SW 딥러닝'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data = pd.read_csv(\"DATA/student-mat.csv\", delimiter=\";\")"],"metadata":{"id":"156px_CpLkK6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"N3xniz3RL80f","executionInfo":{"status":"ok","timestamp":1692162663068,"user_tz":-540,"elapsed":11,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"0187bb20-51c6-4eff-a112-faac6abc4aa0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    school sex  age address famsize Pstatus  Medu  Fedu      Mjob      Fjob  \\\n","0       GP   F   18       U     GT3       A     4     4   at_home   teacher   \n","1       GP   F   17       U     GT3       T     1     1   at_home     other   \n","2       GP   F   15       U     LE3       T     1     1   at_home     other   \n","3       GP   F   15       U     GT3       T     4     2    health  services   \n","4       GP   F   16       U     GT3       T     3     3     other     other   \n","..     ...  ..  ...     ...     ...     ...   ...   ...       ...       ...   \n","390     MS   M   20       U     LE3       A     2     2  services  services   \n","391     MS   M   17       U     LE3       T     3     1  services  services   \n","392     MS   M   21       R     GT3       T     1     1     other     other   \n","393     MS   M   18       R     LE3       T     3     2  services     other   \n","394     MS   M   19       U     LE3       T     1     1     other   at_home   \n","\n","     ... famrel freetime  goout  Dalc  Walc health absences  G1  G2  G3  \n","0    ...      4        3      4     1     1      3        6   5   6   6  \n","1    ...      5        3      3     1     1      3        4   5   5   6  \n","2    ...      4        3      2     2     3      3       10   7   8  10  \n","3    ...      3        2      2     1     1      5        2  15  14  15  \n","4    ...      4        3      2     1     2      5        4   6  10  10  \n","..   ...    ...      ...    ...   ...   ...    ...      ...  ..  ..  ..  \n","390  ...      5        5      4     4     5      4       11   9   9   9  \n","391  ...      2        4      5     3     4      2        3  14  16  16  \n","392  ...      5        5      3     3     3      3        3  10   8   7  \n","393  ...      4        4      1     3     4      5        0  11  12  10  \n","394  ...      3        2      3     3     3      5        5   8   9   9  \n","\n","[395 rows x 33 columns]"],"text/html":["\n","\n","  <div id=\"df-166b3edc-8b55-4d59-ab63-06161eba0caf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>school</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>address</th>\n","      <th>famsize</th>\n","      <th>Pstatus</th>\n","      <th>Medu</th>\n","      <th>Fedu</th>\n","      <th>Mjob</th>\n","      <th>Fjob</th>\n","      <th>...</th>\n","      <th>famrel</th>\n","      <th>freetime</th>\n","      <th>goout</th>\n","      <th>Dalc</th>\n","      <th>Walc</th>\n","      <th>health</th>\n","      <th>absences</th>\n","      <th>G1</th>\n","      <th>G2</th>\n","      <th>G3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>18</td>\n","      <td>U</td>\n","      <td>GT3</td>\n","      <td>A</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>at_home</td>\n","      <td>teacher</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>17</td>\n","      <td>U</td>\n","      <td>GT3</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>at_home</td>\n","      <td>other</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>15</td>\n","      <td>U</td>\n","      <td>LE3</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>at_home</td>\n","      <td>other</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>15</td>\n","      <td>U</td>\n","      <td>GT3</td>\n","      <td>T</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>health</td>\n","      <td>services</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>16</td>\n","      <td>U</td>\n","      <td>GT3</td>\n","      <td>T</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>other</td>\n","      <td>other</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>390</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>20</td>\n","      <td>U</td>\n","      <td>LE3</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>services</td>\n","      <td>services</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>391</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>17</td>\n","      <td>U</td>\n","      <td>LE3</td>\n","      <td>T</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>services</td>\n","      <td>services</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>14</td>\n","      <td>16</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>392</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>21</td>\n","      <td>R</td>\n","      <td>GT3</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>other</td>\n","      <td>other</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>18</td>\n","      <td>R</td>\n","      <td>LE3</td>\n","      <td>T</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>services</td>\n","      <td>other</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>12</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>19</td>\n","      <td>U</td>\n","      <td>LE3</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>other</td>\n","      <td>at_home</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>395 rows × 33 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-166b3edc-8b55-4d59-ab63-06161eba0caf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e2814466-602f-49f6-9aff-d3428819c234\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2814466-602f-49f6-9aff-d3428819c234')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e2814466-602f-49f6-9aff-d3428819c234 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-166b3edc-8b55-4d59-ab63-06161eba0caf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-166b3edc-8b55-4d59-ab63-06161eba0caf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["pd.set_option(\"display.max_columns\", None)\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"QFdLDkVyK5NI","executionInfo":{"status":"ok","timestamp":1692162663068,"user_tz":-540,"elapsed":10,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"028c5374-35ff-4dfd-d21e-491344ee6389"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    school sex  age address famsize Pstatus  Medu  Fedu      Mjob      Fjob  \\\n","0       GP   F   18       U     GT3       A     4     4   at_home   teacher   \n","1       GP   F   17       U     GT3       T     1     1   at_home     other   \n","2       GP   F   15       U     LE3       T     1     1   at_home     other   \n","3       GP   F   15       U     GT3       T     4     2    health  services   \n","4       GP   F   16       U     GT3       T     3     3     other     other   \n","..     ...  ..  ...     ...     ...     ...   ...   ...       ...       ...   \n","390     MS   M   20       U     LE3       A     2     2  services  services   \n","391     MS   M   17       U     LE3       T     3     1  services  services   \n","392     MS   M   21       R     GT3       T     1     1     other     other   \n","393     MS   M   18       R     LE3       T     3     2  services     other   \n","394     MS   M   19       U     LE3       T     1     1     other   at_home   \n","\n","     reason guardian  traveltime  studytime  failures schoolsup famsup paid  \\\n","0    course   mother           2          2         0       yes     no   no   \n","1    course   father           1          2         0        no    yes   no   \n","2     other   mother           1          2         3       yes     no  yes   \n","3      home   mother           1          3         0        no    yes  yes   \n","4      home   father           1          2         0        no    yes  yes   \n","..      ...      ...         ...        ...       ...       ...    ...  ...   \n","390  course    other           1          2         2        no    yes  yes   \n","391  course   mother           2          1         0        no     no   no   \n","392  course    other           1          1         3        no     no   no   \n","393  course   mother           3          1         0        no     no   no   \n","394  course   father           1          1         0        no     no   no   \n","\n","    activities nursery higher internet romantic  famrel  freetime  goout  \\\n","0           no     yes    yes       no       no       4         3      4   \n","1           no      no    yes      yes       no       5         3      3   \n","2           no     yes    yes      yes       no       4         3      2   \n","3          yes     yes    yes      yes      yes       3         2      2   \n","4           no     yes    yes       no       no       4         3      2   \n","..         ...     ...    ...      ...      ...     ...       ...    ...   \n","390         no     yes    yes       no       no       5         5      4   \n","391         no      no    yes      yes       no       2         4      5   \n","392         no      no    yes       no       no       5         5      3   \n","393         no      no    yes      yes       no       4         4      1   \n","394         no     yes    yes      yes       no       3         2      3   \n","\n","     Dalc  Walc  health  absences  G1  G2  G3  \n","0       1     1       3         6   5   6   6  \n","1       1     1       3         4   5   5   6  \n","2       2     3       3        10   7   8  10  \n","3       1     1       5         2  15  14  15  \n","4       1     2       5         4   6  10  10  \n","..    ...   ...     ...       ...  ..  ..  ..  \n","390     4     5       4        11   9   9   9  \n","391     3     4       2         3  14  16  16  \n","392     3     3       3         3  10   8   7  \n","393     3     4       5         0  11  12  10  \n","394     3     3       5         5   8   9   9  \n","\n","[395 rows x 33 columns]"],"text/html":["\n","\n","  <div id=\"df-105000a4-fc77-43b7-83b1-b8622f3815c1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>school</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>address</th>\n","      <th>famsize</th>\n","      <th>Pstatus</th>\n","      <th>Medu</th>\n","      <th>Fedu</th>\n","      <th>Mjob</th>\n","      <th>Fjob</th>\n","      <th>reason</th>\n","      <th>guardian</th>\n","      <th>traveltime</th>\n","      <th>studytime</th>\n","      <th>failures</th>\n","      <th>schoolsup</th>\n","      <th>famsup</th>\n","      <th>paid</th>\n","      <th>activities</th>\n","      <th>nursery</th>\n","      <th>higher</th>\n","      <th>internet</th>\n","      <th>romantic</th>\n","      <th>famrel</th>\n","      <th>freetime</th>\n","      <th>goout</th>\n","      <th>Dalc</th>\n","      <th>Walc</th>\n","      <th>health</th>\n","      <th>absences</th>\n","      <th>G1</th>\n","      <th>G2</th>\n","      <th>G3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>18</td>\n","      <td>U</td>\n","      <td>GT3</td>\n","      <td>A</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>at_home</td>\n","      <td>teacher</td>\n","      <td>course</td>\n","      <td>mother</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>17</td>\n","      <td>U</td>\n","      <td>GT3</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>at_home</td>\n","      <td>other</td>\n","      <td>course</td>\n","      <td>father</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>15</td>\n","      <td>U</td>\n","      <td>LE3</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>at_home</td>\n","      <td>other</td>\n","      <td>other</td>\n","      <td>mother</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>15</td>\n","      <td>U</td>\n","      <td>GT3</td>\n","      <td>T</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>health</td>\n","      <td>services</td>\n","      <td>home</td>\n","      <td>mother</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>GP</td>\n","      <td>F</td>\n","      <td>16</td>\n","      <td>U</td>\n","      <td>GT3</td>\n","      <td>T</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>other</td>\n","      <td>other</td>\n","      <td>home</td>\n","      <td>father</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>390</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>20</td>\n","      <td>U</td>\n","      <td>LE3</td>\n","      <td>A</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>services</td>\n","      <td>services</td>\n","      <td>course</td>\n","      <td>other</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>391</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>17</td>\n","      <td>U</td>\n","      <td>LE3</td>\n","      <td>T</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>services</td>\n","      <td>services</td>\n","      <td>course</td>\n","      <td>mother</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>14</td>\n","      <td>16</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>392</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>21</td>\n","      <td>R</td>\n","      <td>GT3</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>other</td>\n","      <td>other</td>\n","      <td>course</td>\n","      <td>other</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>18</td>\n","      <td>R</td>\n","      <td>LE3</td>\n","      <td>T</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>services</td>\n","      <td>other</td>\n","      <td>course</td>\n","      <td>mother</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>12</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>MS</td>\n","      <td>M</td>\n","      <td>19</td>\n","      <td>U</td>\n","      <td>LE3</td>\n","      <td>T</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>other</td>\n","      <td>at_home</td>\n","      <td>course</td>\n","      <td>father</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>395 rows × 33 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-105000a4-fc77-43b7-83b1-b8622f3815c1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-1827a0c2-3efb-414c-8397-cc5cf82b6742\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1827a0c2-3efb-414c-8397-cc5cf82b6742')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-1827a0c2-3efb-414c-8397-cc5cf82b6742 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-105000a4-fc77-43b7-83b1-b8622f3815c1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-105000a4-fc77-43b7-83b1-b8622f3815c1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["### 문제와 정답 분리"],"metadata":{"id":"NfftWnBDMgjw"}},{"cell_type":"code","source":["# 문제 : X (studytime)\n","# 정답 : y (G3)\n","\n","X = data[\"studytime\"]\n","y = data[\"G3\"]"],"metadata":{"id":"hGbY8u5_Kpp4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X.shape, y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vaaXmue7K45C","executionInfo":{"status":"ok","timestamp":1692162663069,"user_tz":-540,"elapsed":11,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"4600ac7b-6b0d-4458-ba1d-e29b21761965"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((395,), (395,))"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["### 학습, 평가 데이터 분리"],"metadata":{"id":"0j_eFPC0N1lk"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)"],"metadata":{"id":"Pxfqhn16Fx-r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n","print(X_test.shape)\n","print(y_train.shape)\n","print(y_test.shape)"],"metadata":{"id":"nR44rNSOFyBJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692162663473,"user_tz":-540,"elapsed":2,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"7174c547-48c5-4728-e3e5-170158056e9d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(296,)\n","(99,)\n","(296,)\n","(99,)\n"]}]},{"cell_type":"markdown","source":["### *신경망 모델*\n","\n","  1. 신경망 구조 설계\n","  2. 신경망 학습 및 평가 방법 설정\n","  3. 학습 및 학습과정 시각화\n","  4. 모델 평가"],"metadata":{"id":"2j9QXIWAOgH6"}},{"cell_type":"code","source":["from tensorflow.keras import Sequential\n","# Sequential : 신경망의 뼈대를 구축하기 위한 함수\n","from tensorflow.keras.layers import InputLayer, Dense\n","# InputLayer : 신경망의 입력층을 생성\n","# Dense : 신경망 층(뉴런의 묶음)을 구성하는 함수"],"metadata":{"id":"jTsMLvGuFyD4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 1. 신경망 구조 설계\n","\n","model = Sequential() # 신경망 뼈대 설정\n","# 입력 층 설정\n","model.add(InputLayer(input_shape=(1,)))\n","# input_shape : 입력 데이터의 특성 형태를 설정 (1개의 특성을 가진 1차원 데이터)\n","\n","# 출력 층 설정\n","model.add(Dense(1))\n","# Dense : 하나의 층을 쌓아주는 함수 (괄호 안의 숫자는 해다 층에 있는 뉴런의 개수)\n","\n","# 설계된 신경망의 정보를 요약해서 출력\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nATDNCDPNbST","executionInfo":{"status":"ok","timestamp":1692162667342,"user_tz":-540,"elapsed":5,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"b293c880-f139-4cb1-c1e7-ed47969cbcad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 1)                 2         \n","                                                                 \n","=================================================================\n","Total params: 2\n","Trainable params: 2\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# 2. 신경망 학습 및 평가방법 설정\n","# 손실함수(비용함수), 최적화함수 설\n","\n","model.compile(loss=\"mse\",\n","              optimizer=\"SGD\")"],"metadata":{"id":"guM7_NRoFyGY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 3. 학습 및 시각화\n","\n","h = model.fit(X_train, y_train,\n","              epochs=100) # 학습 횟수 설정"],"metadata":{"id":"wHWO6y9iFyI_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692162673818,"user_tz":-540,"elapsed":6478,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"52ea1346-5ec0-4f3a-9f0d-d797efc8998b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","10/10 [==============================] - 1s 4ms/step - loss: 56.0457\n","Epoch 2/100\n","10/10 [==============================] - 0s 4ms/step - loss: 30.8011\n","Epoch 3/100\n","10/10 [==============================] - 0s 7ms/step - loss: 27.3147\n","Epoch 4/100\n","10/10 [==============================] - 0s 5ms/step - loss: 27.0175\n","Epoch 5/100\n","10/10 [==============================] - 0s 2ms/step - loss: 26.1213\n","Epoch 6/100\n","10/10 [==============================] - 0s 3ms/step - loss: 25.7638\n","Epoch 7/100\n","10/10 [==============================] - 0s 3ms/step - loss: 25.3542\n","Epoch 8/100\n","10/10 [==============================] - 0s 5ms/step - loss: 25.0294\n","Epoch 9/100\n","10/10 [==============================] - 0s 2ms/step - loss: 24.7406\n","Epoch 10/100\n","10/10 [==============================] - 0s 2ms/step - loss: 24.3979\n","Epoch 11/100\n","10/10 [==============================] - 0s 3ms/step - loss: 24.1456\n","Epoch 12/100\n","10/10 [==============================] - 0s 2ms/step - loss: 23.8359\n","Epoch 13/100\n","10/10 [==============================] - 0s 4ms/step - loss: 23.5193\n","Epoch 14/100\n","10/10 [==============================] - 0s 3ms/step - loss: 23.2700\n","Epoch 15/100\n","10/10 [==============================] - 0s 4ms/step - loss: 23.0207\n","Epoch 16/100\n","10/10 [==============================] - 0s 7ms/step - loss: 22.8585\n","Epoch 17/100\n","10/10 [==============================] - 0s 5ms/step - loss: 22.5865\n","Epoch 18/100\n","10/10 [==============================] - 0s 2ms/step - loss: 22.3508\n","Epoch 19/100\n","10/10 [==============================] - 0s 2ms/step - loss: 22.2040\n","Epoch 20/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.9667\n","Epoch 21/100\n","10/10 [==============================] - 0s 2ms/step - loss: 21.7954\n","Epoch 22/100\n","10/10 [==============================] - 0s 2ms/step - loss: 21.6359\n","Epoch 23/100\n","10/10 [==============================] - 0s 2ms/step - loss: 21.3936\n","Epoch 24/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.1942\n","Epoch 25/100\n","10/10 [==============================] - 0s 2ms/step - loss: 21.1238\n","Epoch 26/100\n","10/10 [==============================] - 0s 2ms/step - loss: 20.9241\n","Epoch 27/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.8109\n","Epoch 28/100\n","10/10 [==============================] - 0s 2ms/step - loss: 20.6044\n","Epoch 29/100\n","10/10 [==============================] - 0s 2ms/step - loss: 20.4954\n","Epoch 30/100\n","10/10 [==============================] - 0s 1ms/step - loss: 20.3566\n","Epoch 31/100\n","10/10 [==============================] - 0s 1ms/step - loss: 20.2675\n","Epoch 32/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.2368\n","Epoch 33/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.0766\n","Epoch 34/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.9405\n","Epoch 35/100\n","10/10 [==============================] - 0s 4ms/step - loss: 19.8726\n","Epoch 36/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.7486\n","Epoch 37/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.7180\n","Epoch 38/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.6147\n","Epoch 39/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.5603\n","Epoch 40/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.4382\n","Epoch 41/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.3885\n","Epoch 42/100\n","10/10 [==============================] - 0s 8ms/step - loss: 19.3055\n","Epoch 43/100\n","10/10 [==============================] - 0s 6ms/step - loss: 19.2731\n","Epoch 44/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.2592\n","Epoch 45/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.1467\n","Epoch 46/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.1187\n","Epoch 47/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.0463\n","Epoch 48/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.9911\n","Epoch 49/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.9345\n","Epoch 50/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.9489\n","Epoch 51/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.8911\n","Epoch 52/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.8393\n","Epoch 53/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.8237\n","Epoch 54/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.7887\n","Epoch 55/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.7206\n","Epoch 56/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.6732\n","Epoch 57/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.7539\n","Epoch 58/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.6407\n","Epoch 59/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.5911\n","Epoch 60/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.6355\n","Epoch 61/100\n","10/10 [==============================] - 0s 3ms/step - loss: 18.5744\n","Epoch 62/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.5853\n","Epoch 63/100\n","10/10 [==============================] - 0s 1ms/step - loss: 18.4995\n","Epoch 64/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.5032\n","Epoch 65/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.5198\n","Epoch 66/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.4320\n","Epoch 67/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.5097\n","Epoch 68/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.4031\n","Epoch 69/100\n","10/10 [==============================] - 0s 3ms/step - loss: 18.3822\n","Epoch 70/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.3662\n","Epoch 71/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.3336\n","Epoch 72/100\n","10/10 [==============================] - 0s 3ms/step - loss: 18.3564\n","Epoch 73/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.3353\n","Epoch 74/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.3696\n","Epoch 75/100\n","10/10 [==============================] - 0s 1ms/step - loss: 18.3152\n","Epoch 76/100\n","10/10 [==============================] - 0s 1ms/step - loss: 18.3292\n","Epoch 77/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.3344\n","Epoch 78/100\n","10/10 [==============================] - 0s 3ms/step - loss: 18.2741\n","Epoch 79/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2458\n","Epoch 80/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2598\n","Epoch 81/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2354\n","Epoch 82/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2229\n","Epoch 83/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2507\n","Epoch 84/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2642\n","Epoch 85/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2392\n","Epoch 86/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.1987\n","Epoch 87/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2524\n","Epoch 88/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2155\n","Epoch 89/100\n","10/10 [==============================] - 0s 1ms/step - loss: 18.2463\n","Epoch 90/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.1651\n","Epoch 91/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.2737\n","Epoch 92/100\n","10/10 [==============================] - 0s 3ms/step - loss: 18.1888\n","Epoch 93/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.1489\n","Epoch 94/100\n","10/10 [==============================] - 0s 3ms/step - loss: 18.1901\n","Epoch 95/100\n","10/10 [==============================] - 0s 3ms/step - loss: 18.1959\n","Epoch 96/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.1951\n","Epoch 97/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.3148\n","Epoch 98/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.1646\n","Epoch 99/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.1791\n","Epoch 100/100\n","10/10 [==============================] - 0s 2ms/step - loss: 18.1142\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(15,5))\n","\n","plt.plot(h.history['loss'], label='loss')\n","# history :학습 시 출력되는 값(loss, acc)들을 가져올 수 있게 해주는 명령\n","\n","plt.legend()\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":258},"id":"cxHjunI2PpcS","executionInfo":{"status":"ok","timestamp":1692162674329,"user_tz":-540,"elapsed":514,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"a77131ff-3861-442c-9caf-fede47ec1b31"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["- 초반에는 빠르게 loss값(mes)이 떨어지고 있음\n","- 경사하강법 초반에는 가중치(w), 절편(b)값이 임의의 값으로 설정되어 있기 때문에\\\n"," 몇 번만 학습시켜도 mse가 빠르게 줄어드는 것을 확인 할 수 있음"],"metadata":{"id":"_DcUKzXvZLB2"}},{"cell_type":"code","source":["# 4. 모델 평가\n","\n","model.evaluate(X_test, y_test)"],"metadata":{"id":"eDU5MDYMFyMB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692162674329,"user_tz":-540,"elapsed":7,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"5358c581-3b28-4eb2-b0e1-04db4f52d580"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 0s 3ms/step - loss: 29.4816\n"]},{"output_type":"execute_result","data":{"text/plain":["29.481624603271484"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["### 입력 특성이 2개인 모델을 생성\n","\n","- 문제(studytime, traveltime) X1\n","- 정답(G3) - y1\n","- 신경망의 최종 출력층 뉴런 개수는 1개"],"metadata":{"id":"s3-eZiGSa1v9"}},{"cell_type":"code","source":["# 문제, 정답 분리\n","\n","# 문제 : X1 (studytime)\n","# 정답 : y1 (G3)\n","\n","X1 = data[[\"studytime\", \"traveltime\"]]\n","y1 = data[\"G3\"]\n","\n","X1.shape, y1.shape"],"metadata":{"id":"dg6lAJS4b5YO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692162674762,"user_tz":-540,"elapsed":438,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"25ea7c41-8e5e-4b3c-b6e1-7a3a81e64cda"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((395, 2), (395,))"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# 학습, 평가 데이터 분리\n","\n","from sklearn.model_selection import train_test_split\n","\n","X1_train, X1_test, y1_train, y1_test = train_test_split(X1, y1, random_state=33)\n","\n","print(X1_train.shape)\n","print(X1_test.shape)\n","print(y1_train.shape)\n","print(y1_test.shape)"],"metadata":{"id":"oAojUcz_cU_l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692162674762,"user_tz":-540,"elapsed":11,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"802e8231-2570-4ec0-9029-6e570825e98c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(296, 2)\n","(99, 2)\n","(296,)\n","(99,)\n"]}]},{"cell_type":"code","source":["# 1 신경망 구조 설계\n","\n","model1 = Sequential()\n","\n","model1.add(InputLayer(input_shape=(2,)))\n","\n","model1.add(Dense(2))\n","\n","model1.summary()"],"metadata":{"id":"_ewBUrs8FyOD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692162674762,"user_tz":-540,"elapsed":8,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"2bbd3ab2-e367-4fc5-f45c-2c7e72f55212"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_1 (Dense)             (None, 2)                 6         \n","                                                                 \n","=================================================================\n","Total params: 6\n","Trainable params: 6\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# 2 신경망 학습 및 평가방법 설정\n","# 손실함수(비용함수), 최적화함수 설\n","\n","model1.compile(loss=\"mse\",\n","              optimizer=\"SGD\")"],"metadata":{"id":"KgLYZ2G2aTwN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 3 학습 및 시각화\n","\n","h1 = model1.fit(X1_train, y1_train,\n","              epochs=100) # 학습 횟수 설정"],"metadata":{"id":"fQ3jKQfPcDde","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692162680115,"user_tz":-540,"elapsed":5357,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"6c1b5c44-7b9b-4d6f-eae8-09a03f4c15f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","10/10 [==============================] - 1s 3ms/step - loss: 75.0601\n","Epoch 2/100\n","10/10 [==============================] - 0s 3ms/step - loss: 35.9277\n","Epoch 3/100\n","10/10 [==============================] - 0s 3ms/step - loss: 27.4791\n","Epoch 4/100\n","10/10 [==============================] - 0s 4ms/step - loss: 25.7060\n","Epoch 5/100\n","10/10 [==============================] - 0s 6ms/step - loss: 25.1895\n","Epoch 6/100\n","10/10 [==============================] - 0s 3ms/step - loss: 24.9180\n","Epoch 7/100\n","10/10 [==============================] - 0s 3ms/step - loss: 24.8171\n","Epoch 8/100\n","10/10 [==============================] - 0s 3ms/step - loss: 24.7371\n","Epoch 9/100\n","10/10 [==============================] - 0s 3ms/step - loss: 24.6677\n","Epoch 10/100\n","10/10 [==============================] - 0s 3ms/step - loss: 24.5452\n","Epoch 11/100\n","10/10 [==============================] - 0s 2ms/step - loss: 24.3675\n","Epoch 12/100\n","10/10 [==============================] - 0s 2ms/step - loss: 24.2899\n","Epoch 13/100\n","10/10 [==============================] - 0s 2ms/step - loss: 24.1874\n","Epoch 14/100\n","10/10 [==============================] - 0s 2ms/step - loss: 24.0876\n","Epoch 15/100\n","10/10 [==============================] - 0s 2ms/step - loss: 24.0446\n","Epoch 16/100\n","10/10 [==============================] - 0s 2ms/step - loss: 23.9190\n","Epoch 17/100\n","10/10 [==============================] - 0s 3ms/step - loss: 23.8029\n","Epoch 18/100\n","10/10 [==============================] - 0s 2ms/step - loss: 23.7615\n","Epoch 19/100\n","10/10 [==============================] - 0s 3ms/step - loss: 23.6090\n","Epoch 20/100\n","10/10 [==============================] - 0s 4ms/step - loss: 23.5766\n","Epoch 21/100\n","10/10 [==============================] - 0s 4ms/step - loss: 23.4683\n","Epoch 22/100\n","10/10 [==============================] - 0s 3ms/step - loss: 23.3438\n","Epoch 23/100\n","10/10 [==============================] - 0s 8ms/step - loss: 23.3014\n","Epoch 24/100\n","10/10 [==============================] - 0s 2ms/step - loss: 23.2165\n","Epoch 25/100\n","10/10 [==============================] - 0s 2ms/step - loss: 23.1210\n","Epoch 26/100\n","10/10 [==============================] - 0s 2ms/step - loss: 23.1336\n","Epoch 27/100\n","10/10 [==============================] - 0s 2ms/step - loss: 22.9980\n","Epoch 28/100\n","10/10 [==============================] - 0s 2ms/step - loss: 22.9683\n","Epoch 29/100\n","10/10 [==============================] - 0s 9ms/step - loss: 22.8448\n","Epoch 30/100\n","10/10 [==============================] - 0s 4ms/step - loss: 22.8085\n","Epoch 31/100\n","10/10 [==============================] - 0s 5ms/step - loss: 22.7201\n","Epoch 32/100\n","10/10 [==============================] - 0s 4ms/step - loss: 22.6140\n","Epoch 33/100\n","10/10 [==============================] - 0s 4ms/step - loss: 22.5697\n","Epoch 34/100\n","10/10 [==============================] - 0s 5ms/step - loss: 22.4847\n","Epoch 35/100\n","10/10 [==============================] - 0s 6ms/step - loss: 22.5264\n","Epoch 36/100\n","10/10 [==============================] - 0s 7ms/step - loss: 22.4040\n","Epoch 37/100\n","10/10 [==============================] - 0s 2ms/step - loss: 22.3825\n","Epoch 38/100\n","10/10 [==============================] - 0s 7ms/step - loss: 22.2616\n","Epoch 39/100\n","10/10 [==============================] - 0s 3ms/step - loss: 22.1740\n","Epoch 40/100\n","10/10 [==============================] - 0s 4ms/step - loss: 22.1156\n","Epoch 41/100\n","10/10 [==============================] - 0s 5ms/step - loss: 22.0781\n","Epoch 42/100\n","10/10 [==============================] - 0s 4ms/step - loss: 22.0142\n","Epoch 43/100\n","10/10 [==============================] - 0s 4ms/step - loss: 21.9732\n","Epoch 44/100\n","10/10 [==============================] - 0s 4ms/step - loss: 21.8686\n","Epoch 45/100\n","10/10 [==============================] - 0s 2ms/step - loss: 21.8329\n","Epoch 46/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.7654\n","Epoch 47/100\n","10/10 [==============================] - 0s 4ms/step - loss: 21.6962\n","Epoch 48/100\n","10/10 [==============================] - 0s 5ms/step - loss: 21.6836\n","Epoch 49/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.5910\n","Epoch 50/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.5305\n","Epoch 51/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.5151\n","Epoch 52/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.4283\n","Epoch 53/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.3975\n","Epoch 54/100\n","10/10 [==============================] - 0s 2ms/step - loss: 21.3728\n","Epoch 55/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.2963\n","Epoch 56/100\n","10/10 [==============================] - 0s 2ms/step - loss: 21.2603\n","Epoch 57/100\n","10/10 [==============================] - 0s 3ms/step - loss: 21.2405\n","Epoch 58/100\n","10/10 [==============================] - 0s 4ms/step - loss: 21.1864\n","Epoch 59/100\n","10/10 [==============================] - 0s 4ms/step - loss: 21.1158\n","Epoch 60/100\n","10/10 [==============================] - 0s 7ms/step - loss: 21.0876\n","Epoch 61/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.9928\n","Epoch 62/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.9809\n","Epoch 63/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.8953\n","Epoch 64/100\n","10/10 [==============================] - 0s 2ms/step - loss: 20.8493\n","Epoch 65/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.8548\n","Epoch 66/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.8160\n","Epoch 67/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.7854\n","Epoch 68/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.7858\n","Epoch 69/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.6734\n","Epoch 70/100\n","10/10 [==============================] - 0s 2ms/step - loss: 20.6497\n","Epoch 71/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.5910\n","Epoch 72/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.5558\n","Epoch 73/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.5010\n","Epoch 74/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.4606\n","Epoch 75/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.4433\n","Epoch 76/100\n","10/10 [==============================] - 0s 2ms/step - loss: 20.4028\n","Epoch 77/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.3562\n","Epoch 78/100\n","10/10 [==============================] - 0s 5ms/step - loss: 20.3174\n","Epoch 79/100\n","10/10 [==============================] - 0s 6ms/step - loss: 20.3295\n","Epoch 80/100\n","10/10 [==============================] - 0s 8ms/step - loss: 20.2919\n","Epoch 81/100\n","10/10 [==============================] - 0s 6ms/step - loss: 20.2292\n","Epoch 82/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.1684\n","Epoch 83/100\n","10/10 [==============================] - 0s 2ms/step - loss: 20.1366\n","Epoch 84/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.1104\n","Epoch 85/100\n","10/10 [==============================] - 0s 4ms/step - loss: 20.0974\n","Epoch 86/100\n","10/10 [==============================] - 0s 5ms/step - loss: 20.0855\n","Epoch 87/100\n","10/10 [==============================] - 0s 3ms/step - loss: 20.0414\n","Epoch 88/100\n","10/10 [==============================] - 0s 4ms/step - loss: 19.9836\n","Epoch 89/100\n","10/10 [==============================] - 0s 3ms/step - loss: 19.9536\n","Epoch 90/100\n","10/10 [==============================] - 0s 4ms/step - loss: 19.9947\n","Epoch 91/100\n","10/10 [==============================] - 0s 3ms/step - loss: 19.9099\n","Epoch 92/100\n","10/10 [==============================] - 0s 3ms/step - loss: 19.8913\n","Epoch 93/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.8852\n","Epoch 94/100\n","10/10 [==============================] - 0s 3ms/step - loss: 19.8399\n","Epoch 95/100\n","10/10 [==============================] - 0s 2ms/step - loss: 19.8653\n","Epoch 96/100\n","10/10 [==============================] - 0s 4ms/step - loss: 19.7960\n","Epoch 97/100\n","10/10 [==============================] - 0s 4ms/step - loss: 19.7535\n","Epoch 98/100\n","10/10 [==============================] - 0s 5ms/step - loss: 19.7770\n","Epoch 99/100\n","10/10 [==============================] - 0s 3ms/step - loss: 19.7016\n","Epoch 100/100\n","10/10 [==============================] - 0s 5ms/step - loss: 19.6750\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(15,5))\n","\n","plt.plot(h1.history['loss'], label='loss')\n","\n","plt.legend()\n","plt.show"],"metadata":{"id":"32HjFjN6cDgP","colab":{"base_uri":"https://localhost:8080/","height":258},"executionInfo":{"status":"ok","timestamp":1692162680881,"user_tz":-540,"elapsed":769,"user":{"displayName":"이수현","userId":"14585987872054362818"}},"outputId":"e8d67257-9a6f-4f68-afed-42668cc202c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"mMowo9qHcDjF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"OLxjxSffcDmM"},"execution_count":null,"outputs":[]}]}